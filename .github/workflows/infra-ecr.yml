name: Deploy Infraestrutura ECR

on:
  workflow_dispatch:  # Permite execuÃ§Ã£o manual em qualquer branch
  push:
    branches:
      - main
      - feature/**  # Permite teste em branches feature
      - develop     # Se houver branch develop
    paths:
      - 'infra/ecr/**'
      - '.github/workflows/infra-ecr.yml'

env:
  AWS_REGION: us-east-1
  TF_WORKING_DIR: infra/ecr

jobs:
  deploy:
    name: Deploy ECR
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout cÃ³digo
      uses: actions/checkout@v4

    - name: Configurar AWS CLI
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_REGION }}
        # LabRole configurado atravÃ©s de secrets
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

    - name: Download backend outputs
      uses: actions/download-artifact@v4
      with:
        name: backend-outputs
        path: ./

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Terraform Init com backend remoto
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: |
        # LÃª os outputs do backend
        BUCKET_NAME=$(jq -r '.s3_bucket_name.value' backend-outputs.json)
        TABLE_NAME=$(jq -r '.dynamodb_table_name.value' backend-outputs.json)
        REGION=$(jq -r '.regiao.value' backend-outputs.json)
        
        echo "ğŸ”§ Configurando backend: bucket=$BUCKET_NAME, table=$TABLE_NAME, region=$REGION"
        
        # Inicializa com backend remoto usando parÃ¢metros
        terraform init \
          -backend-config="bucket=$BUCKET_NAME" \
          -backend-config="key=ecr/terraform.tfstate" \
          -backend-config="region=$REGION" \
          -backend-config="dynamodb_table=$TABLE_NAME" \
          -backend-config="encrypt=true"

    - name: Terraform Format Check
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform fmt -check -recursive

    - name: Terraform Validate
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform validate

    - name: Terraform Plan
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform plan -out=tfplan

    - name: Terraform Apply
      working-directory: ${{ env.TF_WORKING_DIR }}
      # if: github.ref == 'refs/heads/main'  # Comentado para permitir testes
      run: terraform apply -auto-approve tfplan

    - name: Salvar outputs do ECR
      working-directory: ${{ env.TF_WORKING_DIR }}
      # if: github.ref == 'refs/heads/main'  # Comentado para permitir testes
      run: |
        # Exporta outputs para serem usados pelos workflows das aplicaÃ§Ãµes
        terraform output -json > ecr-outputs.json
        cat ecr-outputs.json

    - name: Upload outputs como artefato
      # if: github.ref == 'refs/heads/main'  # Comentado para permitir testes
      uses: actions/upload-artifact@v4
      with:
        name: ecr-outputs
        path: infra/ecr/ecr-outputs.json
        retention-days: 7