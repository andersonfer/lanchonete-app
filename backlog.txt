# BACKLOG - TECH CHALLENGE FASE 2 - PEND√äNCIAS

## ENTREG√ÅVEIS PENDENTES

### üî¥ PRIORIDADE CR√çTICA - KUBERNETES

**1. Criar manifests YAML para Deployment**
   - Status: [ ] Pendente
   - Descri√ß√£o: Criar deployment.yaml para autoatendimento e pagamento
   - Inclui: Configura√ß√µes de container, recursos, health checks

**2. Criar manifests YAML para Service**
   - Status: [ ] Pendente
   - Descri√ß√£o: Criar service.yaml para expor aplica√ß√µes
   - Inclui: ClusterIP, LoadBalancer ou NodePort

**3. Implementar ConfigMap para configura√ß√µes**
   - Status: [ ] Pendente
   - Descri√ß√£o: Criar configmap.yaml para configura√ß√µes n√£o sens√≠veis
   - Inclui: URLs, timeouts, configura√ß√µes de aplica√ß√£o

**4. Implementar Secrets para dados sens√≠veis**
   - Status: [ ] Pendente
   - Descri√ß√£o: Criar secrets.yaml para senhas, tokens, etc.
   - Inclui: Credenciais de banco, chaves de API

**5. Configurar HPA (Horizontal Pod Autoscaler)**
   - Status: [ ] Pendente
   - Descri√ß√£o: Criar hpa.yaml para escalabilidade autom√°tica
   - Inclui: M√©tricas de CPU/mem√≥ria, min/max replicas

**6. Configurar banco de dados no Kubernetes**
   - Status: [ ] Pendente
   - Descri√ß√£o: Deployment MySQL com PersistentVolume
   - Inclui: StatefulSet, PVC, storage class

### üü° PRIORIDADE ALTA - DOCUMENTA√á√ÉO

**7. Criar desenho da arquitetura**
   - Status: [ ] Pendente
   - Descri√ß√£o: Diagrama contemplando requisitos de neg√≥cio e infraestrutura
   - Inclui: Componentes, fluxos, HPA, banco de dados

**8. Atualizar README com documenta√ß√£o completa**
   - Status: [ ] Pendente
   - Descri√ß√£o: Documenta√ß√£o completa do projeto
   - Inclui: Arquitetura, instru√ß√µes de execu√ß√£o, APIs

**9. Criar/atualizar collection de APIs**
   - Status: [ ] Pendente
   - Descri√ß√£o: Collection Postman ou Swagger atualizada
   - Inclui: Exemplos de requisi√ß√µes, casos de uso

**10. Criar guia de execu√ß√£o do projeto**
    - Status: [ ] Pendente
    - Descri√ß√£o: Instru√ß√µes passo a passo para execu√ß√£o
    - Inclui: Pr√©-requisitos, ordem de execu√ß√£o, troubleshooting

### üü¢ PRIORIDADE M√âDIA - ENTREGA FINAL

**11. Gravar v√≠deo demonstrativo**
    - Status: [ ] Pendente
    - Descri√ß√£o: V√≠deo demonstrando arquitetura e funcionamento
    - Inclui: Evid√™ncias de endpoints, infraestrutura, escalabilidade

**12. Configurar reposit√≥rio para entrega**
    - Status: [ ] Pendente
    - Descri√ß√£o: Adicionar usu√°rio soat-architecture ao reposit√≥rio privado
    - Inclui: Verifica√ß√£o de permiss√µes, estrutura do projeto

---

## PR√ìXIMOS PASSOS IMEDIATOS

### 1. KUBERNETES (CR√çTICO)
- [ ] Criar estrutura de diret√≥rios k8s/
- [ ] Implementar manifests b√°sicos (deployment, service)
- [ ] Configurar ConfigMap e Secrets
- [ ] Implementar HPA
- [ ] Testar localmente (minikube/kind)

### 2. DOCUMENTA√á√ÉO (ALTA)
- [ ] Desenhar arquitetura (draw.io, lucidchart)
- [ ] Reescrever README
- [ ] Atualizar collection de APIs
- [ ] Criar guia de execu√ß√£o

### 3. ENTREGA (M√âDIA)
- [ ] Gravar v√≠deo demonstrativo
- [ ] Configurar reposit√≥rio para avalia√ß√£o

---

## ESTIMATIVA DE EXECU√á√ÉO

- üî¥ **Kubernetes**: 3-4 dias
- üü° **Documenta√ß√£o**: 1-2 dias
- üü¢ **Entrega Final**: 1 dia

**Total estimado**: 5-7 dias para finaliza√ß√£o completa

---

## CRIT√âRIOS DE ACEITA√á√ÉO

### Kubernetes:
- [ ] Aplica√ß√µes rodando em pods
- [ ] HPA funcionando com m√©tricas
- [ ] Secrets e ConfigMaps implementados
- [ ] Banco de dados persistente
- [ ] Manifests no Github

### Documenta√ß√£o:
- [ ] Diagrama de arquitetura completo
- [ ] README com instru√ß√µes claras
- [ ] Collection de APIs funcional
- [ ] Guia de execu√ß√£o testado

### Entrega:
- [ ] V√≠deo demonstrativo gravado
- [ ] Reposit√≥rio configurado para avalia√ß√£o
- [ ] Todos os requisitos atendidos

---

Data de cria√ß√£o: 16/07/2025
Status: FASE 2 - ITENS 2 e 3 PENDENTES