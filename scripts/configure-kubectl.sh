#!/bin/bash

set -e

echo "‚öôÔ∏è  CONFIGURANDO KUBECTL PARA EKS"
echo "================================="

# Verificar se AWS CLI est√° configurado
if ! aws sts get-caller-identity &> /dev/null; then
    echo "‚ùå Credenciais AWS n√£o configuradas!"
    echo "üí° Configure as credenciais primeiro"
    exit 1
fi

# Verificar se kubectl est√° instalado
if ! command -v kubectl &> /dev/null; then
    echo "üì¶ kubectl n√£o encontrado. Instalando..."
    
    # Baixar kubectl
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    
    # Tornar execut√°vel
    chmod +x kubectl
    
    # Mover para PATH
    sudo mv kubectl /usr/local/bin/
    
    echo "‚úÖ kubectl instalado com sucesso"
fi

KUBECTL_VERSION=$(kubectl version --client --short 2>/dev/null | cut -d' ' -f3)
echo "üîß kubectl vers√£o: $KUBECTL_VERSION"

# Obter nome do cluster do Terraform
if [[ -f "terraform/kubernetes/terraform.tfstate" ]]; then
    CLUSTER_NAME=$(cd terraform/kubernetes && terraform output -raw cluster_name 2>/dev/null || echo "")
else
    CLUSTER_NAME="lanchonete-cluster"
fi

if [[ -z "$CLUSTER_NAME" ]]; then
    echo "‚ùå Nome do cluster n√£o encontrado. Usando padr√£o: lanchonete-cluster"
    CLUSTER_NAME="lanchonete-cluster"
fi

echo "‚ò∏Ô∏è  Configurando kubectl para cluster: $CLUSTER_NAME"

# Atualizar configura√ß√£o do kubectl
aws eks update-kubeconfig --region us-east-1 --name "$CLUSTER_NAME"

if [[ $? -eq 0 ]]; then
    echo "‚úÖ kubectl configurado com sucesso!"
else
    echo "‚ùå Erro ao configurar kubectl"
    exit 1
fi

# Testar conex√£o
echo "üß™ Testando conectividade..."
kubectl cluster-info --request-timeout=30s

if [[ $? -eq 0 ]]; then
    echo ""
    echo "‚úÖ CONFIGURA√á√ÉO CONCLU√çDA!"
    echo "=========================="
    echo "üéØ Pr√≥ximos comandos √∫teis:"
    echo "   kubectl get nodes"
    echo "   kubectl get pods --all-namespaces"
    echo "   kubectl get services --all-namespaces"
else
    echo "‚ùå N√£o foi poss√≠vel conectar ao cluster"
    echo "üí° Verifique se o cluster est√° rodando e acess√≠vel"
    exit 1
fi