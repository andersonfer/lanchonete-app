# StatefulSet MySQL 8.0 OTIMIZADO para Minikube
# Otimizações SEGURAS aplicadas:
# - Mantém MySQL 8.0 (compatibilidade com dados existentes)
# - Resources ajustados para consumo real observado
# - Configurações conservadoras (sem risco de crash)
# - Health checks otimizados para startup mais rápido

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-statefulset
  labels:
    app: mysql
spec:
  serviceName: mysql-headless-service
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          # MANTÉM MySQL 8.0 para compatibilidade
          image: mysql:8.0
          ports:
            - containerPort: 3306
              name: mysql

          # Configurações básicas via environment
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: root-password
            - name: MYSQL_DATABASE
              value: "lanchonete"
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: password

          # OTIMIZAÇÃO 1: Configurações CONSERVADORAS para economia de recursos
          args:
            # Configurações de memória (otimizadas mas seguras)
            - --innodb-buffer-pool-size=64M        # Reduzido do padrão 128M
            - --innodb-log-file-size=32M           # Menor para menos I/O
            - --max-connections=50                 # Reduzido de 151 padrão
            - --table-open-cache=64               # Reduzido de 4000 padrão
            - --performance-schema=OFF            # Desabilita monitoring (economiza RAM)
            - --innodb-flush-log-at-trx-commit=2  # Menos durabilidade, mais performance
            # Configurações seguras (sem risco de crash)
            - --skip-name-resolve                 # Não resolver DNS (mais rápido)
            - --default-authentication-plugin=mysql_native_password  # Compatibilidade
            # Configurações de buffer e cache menores
            - --join-buffer-size=128K
            - --sort-buffer-size=256K
            - --read-buffer-size=128K
            - --binlog-cache-size=32K
            - --thread-cache-size=8

          # Volume mount
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql

          # OTIMIZAÇÃO 2: Resources baseados no consumo observado (409Mi)
          resources:
            requests:
              memory: "350Mi"     # Próximo ao observado, mas com margem
              cpu: "50m"          # Baseado nos 23m observados
            limits:
              memory: "450Mi"     # Limite não muito apertado
              cpu: "200m"         # Limite conservador

          # OTIMIZAÇÃO 3: Health checks mais rápidos
          startupProbe:
            exec:
              command:
                - sh
                - -c
                - "mysqladmin ping -h localhost -u root -p$MYSQL_ROOT_PASSWORD"
            initialDelaySeconds: 30      # Mais conservador para MySQL 8.0
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 12         # 1 minuto total
            successThreshold: 1

          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "mysql -h localhost -u root -p$MYSQL_ROOT_PASSWORD -e 'SELECT 1'"
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1

          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "mysqladmin ping -h localhost -u root -p$MYSQL_ROOT_PASSWORD"
            initialDelaySeconds: 90       # Bem conservador
            periodSeconds: 30             # Menos frequente
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1

      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc